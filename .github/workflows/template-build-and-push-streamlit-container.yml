name: Build and Push Docker Image

# Define trigger condition and input variables and secrets
on:
  workflow_call:
    inputs:
      image_name:
        description: 'Name of the Docker image'
        required: true
        type: string

      docker_file_path:
        description: 'Path to the Dockerfile'
        required: true
        type: string

    secrets:
      docker_password:
        description: 'Docker Hub password'
        required: true

      redirect_uri:
        description: 'Streamlit oauth0 redirect_uri'
        required: false

      cookie_secret:
        description: 'Streamlit oauth0 cookie_secret'
        required: false

      oauth0_domain:
        description: 'Streamlit oauth0 oauth0_domain'
        required: false

      oauth0_client_id:
        description: 'Streamlit oauth0 oauth0_client_id'
        required: false

      oauth0_client_secret:
        description: 'Streamlit oauth0 oauth0_client_secret'
        required: false

      oauth0_metadata_url:
        description: 'Streamlit oauth0 redirect_uri'
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Container
    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Login to docker hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.docker_password }}

      - name: Create secret.toml locally (temporary)
        run: |
          cat <<EOF > secret.toml
          [auth]
          redirect_uri='${{ secrets.REDIRECT_URI }}'
          cookie_secret='${{ secrets.COOKIE_SECRET }}'

          [auth.auth0]
          domain='${{ secrets.AUTH0_DOMAIN }}'
          client_id='${{ secrets.AUTH0_CLIENT_ID }}'
          client_secret='${{ secrets.AUTH0_CLIENT_SECRET }}'
          server_metadata_url='${{ secrets.AUTH0_METADATA_URL }}'
          EOF

      # Build and push container to dockerhub
      - name: Build and Push Docker Image
        run: |
          docker build `
            --secret id=secret_toml,src=secret.toml `
            -t ${{ github.actor }}/${{ inputs.image_name }} `
            -f ${{ inputs.docker_file_path }} .

          docker push ${{ github.actor }}/${{ inputs.image_name }}:latest
        shell: pwsh
