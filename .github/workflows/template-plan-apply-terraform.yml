name: Terraform Plan & Apply

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        required: true
    inputs:
      release_environment:
        description: 'GitHub environment for release'
        default: ''
        type: string
      should_apply:
        description: 'Whether to apply the plan'
        default: 'false'
        type: string
      tf_directory:
        description: 'Terraform code directory'
        required: false
        default: '.'
        type: string

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.release_environment }}

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.2

      - name: Export Azure credentials for Terraform
        run: |
          echo '${{ secrets.AZURE_CREDENTIALS }}' > azurecreds.json
          echo "ARM_CLIENT_ID=$(jq -r .clientId azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r .clientSecret azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r .subscriptionId azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r .tenantId azurecreds.json)" >> $GITHUB_ENV
        shell: bash

      - name: Terraform Init
        run: |
          terraform -chdir="${{ inputs.tf_directory }}" init

      - name: Terraform Validate
        run: terraform -chdir="${{ inputs.tf_directory }}" validate

      - name: Terraform Plan
        run: terraform -chdir="${{ inputs.tf_directory }}" plan -out=tfplan

      - name: Terraform Apply (if enabled)
        if: ${{ inputs.should_apply == 'true' }}
        run: terraform -chdir="${{ inputs.tf_directory }}" apply tfplan
