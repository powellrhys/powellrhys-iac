name: Template - Plan & Apply Terraform

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        required: true
    inputs:
      tf_state_resource_group_name:
        description: 'Blob storage resource group'
        required: true
        type: string
      tf_state_storage_account:
        description: 'Blob storage storage account name'
        required: true
        type: string
      tf_state_container_name:
        description: 'Blob storage container name'
        required: true
        type: string
      tf_state_key:
        description: 'Terraform state file key'
        required: true
        type: string
      release_environment:
        description: 'Github environment for release'
        default: 'PROD'
        type: string

jobs:
  terraform-plan:
    name: Terraform
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.2

      - name: Export Azure credentials for Terraform
        run: |
          echo '${{ secrets.AZURE_CREDENTIALS }}' > azurecreds.json
          echo "ARM_CLIENT_ID=$(jq -r .clientId azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r .clientSecret azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r .subscriptionId azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r .tenantId azurecreds.json)" >> $GITHUB_ENV
        shell: bash

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ inputs.tf_state_resource_group_name }}" \
            -backend-config="storage_account_name=${{ inputs.tf_state_storage_account }}" \
            -backend-config="container_name=${{ inputs.tf_state_container_name }}" \
            -backend-config="key=${{ inputs.tf_state_key }}"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.release_environment }}

    permissions:
      actions: read
      contents: read
      packages: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Export Azure credentials for Terraform
        run: |
          echo '${{ secrets.AZURE_CREDENTIALS }}' > azurecreds.json
          echo "ARM_CLIENT_ID=$(jq -r .clientId azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r .clientSecret azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r .subscriptionId azurecreds.json)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r .tenantId azurecreds.json)" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.2

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ inputs.tf_state_resource_group_name }}" \
            -backend-config="storage_account_name=${{ inputs.tf_state_storage_account }}" \
            -backend-config="container_name=${{ inputs.tf_state_container_name }}" \
            -backend-config="key=${{ inputs.tf_state_key }}"

      - name: Download tfplan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply tfplan
